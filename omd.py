# Stepanov Nikita
from random import randrange


def start():
    print(
        '–£ –æ–¥–Ω–æ–≥–æ –∏–∑ —É—á–µ–Ω–∏–∫–æ–≤ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –¥–æ–º–∞—à–∫–∞ –∏ '
        '–Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å –µ–º—É –∏ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –æ—à–∏–±–∫–∏. –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –≤—ã—Ö–æ–¥ - '
        '–Ω–∞–º –Ω—É–∂–µ–Ω –º–µ–Ω—Ç–æ–Ω –£—Ç–∫–∞-—Ç–∏–≤ ü¶Ü üïµÔ∏è , –ø–æ–º–æ–∂–µ–º?'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()

    if options[option]:
        return quiz()
    return stay()


def quiz():
    print("–£—á–µ–Ω–∏–∫ –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞ —Ä–∞–∑–æ–±—Ä–∞–ª –ø–µ—Ä–≤—É—é –ª–µ–∫—Ü–∏—é –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –ø–∞—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤"
          "–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø–æ—ç—Ç–æ–º—É –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è - '–ö—Ä—è-–∫—Ä—è'")
    score = 0
    questions = {"–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –ª–∏  –≤ –∫–æ–¥–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫,"
                 " –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–±–æ–≤?.":
                     {'a': ('\na. –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –º–æ–∂–Ω–æ –∏ —Ç–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å. ', False),
                      'b': ('\nb. –°–æ–∫—Ä–∞—â–∞–µ–º –¥–æ 99 —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫–∏ –∏ –¥–µ–ª–∞–µ–º 4 –ø—Ä–æ–±–µ–ª–∞', True),
                      'c': ('\nc. –ú–æ–∂–Ω–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –¥–æ 77 —Å–∏–º–≤–æ–ª–æ–≤ '
                            '–∏ –∑–∞–º–µ–Ω–∏—Ç—å —Ç–∞–±—É–ª—è—Ü–∏—é –Ω–∞ 4 –ø—Ä–æ–±–µ–ª–∞', True)},
                 "–£—Ç–∫–∞-—Ç–∏–≤ –∑–∞–º–µ—Ç–∏–ª, —á—Ç–æ —É—á–µ–Ω–∏–∫ –ø—ã—Ç–∞–µ—Ç—Å—è —Å—Ä–∞–≤–Ω–∏—Ç—å 2 –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ "
                 "—Ç–∏–ø–∞ float, –º–æ–∂–Ω–æ –ª–∏ —Ç–∞–∫ –¥–µ–ª–∞—Ç—å?":
                     {'a': ('\na. –î–∞, –≤–µ–¥—å —á–∏—Å–ª–∞ –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π', False),
                      'b': ('\nb. –ù–µ—Ç, –≤–µ–¥—å –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ç–µ—Ä—è–µ—Ç—Å—è', True)},
                 "–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ set —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–º?":
                     {'a': ('\na. –î–∞', False), 'b': ('\nb. –ù–µ—Ç', True)},
                 "–ü–æ—á–µ–º—É python –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫? ": {
                     'a': ('\na. –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—à–ª–æ –æ—Ç —Å–µ–º–µ–π—Å—Ç–≤–∞ –ø—Ä–µ—Å–º—ã–∫–∞—é—â–∏—Ö—Å—è', False),
                     'b': ('\nb. –ù–∞–∑–≤–∞–ª–∏ –≤ —á–µ—Å—Ç—å –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–≥–æ —Ç–µ–ª–µ—à–æ—É', True)}}
    for question, answer_options in questions.items():
        user_choice = ''
        while user_choice not in answer_options.keys():
            print(question)
            for answer in answer_options.values():
                print(answer[0])
            print('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: ', *answer_options)
            user_choice = input()
        if answer_options[user_choice][1]:
            score += 1
    print("–ë–ª–∞–≥–æ–¥–∞—Ä—è –£—Ç–∫–∞-—Ç–∏–≤—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ —É —É—á–µ–Ω–∏–∫–∞: ", score)
    return web()


def stay():
    print(
        '–û—Å—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∫—Ä—è-–∫—Ä—è-–∫—Ä—è ü¶Ü, '
        '–£—Ç–∫–∞-—Ç–∏–≤ —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –º–µ–Ω—Ç–æ—Ä–æ–≤ –ê–ê–ê, –∞ –∫–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ –º–µ–Ω—Ç–æ—Ä—ã –≤ '
        '–ê–ê–ê –±–æ—Ä–æ—Ç—å—Å—è —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏, –∞ –Ω–µ –∏–∑–±–µ–≥–∞—é—Ç –∏—Ö.'
        '–¢–∞–∫ —á—Ç–æ –¥–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º.'
    )
    return start()


def web():
    print('–î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ, –Ω–∞—à–∏ –∫—É—Ä–∞—Ç–æ—Ä—ã —Å–æ–æ–±—â–∏–ª–∏ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã –Ω–µ –º–æ–≥—É—Ç –≤–∫–ª—é—á–∏—Ç—å –≤–µ–±–∫–∞–º–µ—Ä—ã,'
          '–ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å –∏–º –∏ –≤–∫–ª—é—á–∏—Ç—å –∏—Ö, –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∏—Ö –Ω–æ–º–µ—Ä'
          '(X - –≤—ã–∫–ª—é—á–µ–Ω–Ω–∞—è,O - –≤–∫–ª—é—á–µ–Ω–Ω–∞—è), –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –≤–≤–µ–¥–∏—Ç–µ #')
    student_cameras = []
    number_of_students = 5
    for i in range(number_of_students):
        if not randrange(2):
            student_cameras.append('X')
        else:
            student_cameras.append('O')
    user_choice = ''
    while user_choice != '#':
        print(student_cameras)
        user_choice = input("–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞(—Å –Ω—É–ª—è): ")
        try:
            is_camera_turned_on = student_cameras[int(user_choice)] == 'O'
        except (IndexError, ValueError):
            continue
        if is_camera_turned_on:
            student_cameras[int(user_choice)] = 'X'
        else:
            student_cameras[int(user_choice)] = 'O'
    all_cameras_turned_on = True
    for student_camera in student_cameras:
        if student_camera == 'X':
            all_cameras_turned_on = False
            break
    if all_cameras_turned_on:
        print("–°–ø–∞—Å–∏–±–æ, –£—Ç–∫–∞-—Ç–∏–≤ ü¶Ü üïµÔ∏è, –≤—ã —É—Å–ø–µ—à–Ω–æ –∫—Ä—è–∫–Ω—É–ª–∏ –≤—Å–µ –∫–∞–º–µ—Ä—ã!")
    else:
        print("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–∞–º–µ—Ä—ã –æ—Å—Ç–∞–ª–∏—Å—å –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã–º–∏, —Ç–æ—á–Ω–æ –ª–∏ –≤—ã –£—Ç–∫–∞-—Ç–∏–≤?")

    print("–û—Ç–ª–∏—á–Ω–∞ —Ä–∞–±–æ—Ç–∞, –£—Ç–∫–∞-—Ç–∏–≤, —Ç–µ–ø–µ—Ä—å –Ω–∞–∫–æ–Ω–µ—Ü –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –≤ –ø–∞–±, –≤–æ–ø—Ä–æ—Å "
          "–ª–∏—à—å –≤ —Ç–æ–º –≤–∑—è—Ç—å –ª–∏ –∑–æ–Ω—Ç–∏–∫ ‚òÇÔ∏è?")


if __name__ == '__main__':
    start()
